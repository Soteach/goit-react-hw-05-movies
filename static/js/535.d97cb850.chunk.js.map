{"version":3,"file":"static/js/535.d97cb850.chunk.js","mappings":"wOAEMA,EAAcC,EAAAA,GAAAA,IAAH,wG,SCAXC,EAAOD,EAAAA,GAAAA,IAAH,qI,kBCEGE,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAGvCC,EAAYC,EAMhB,OAJc,OAAVF,IACFC,EAAS,UALU,oCAKV,OAAqBD,KAI9B,UAACJ,EAAD,YACE,gBAAKO,IAAKF,EAAWG,IAAG,gBAAWN,MACnC,uBAAIA,KACJ,uBAAIC,MAGT,ECWD,EAzBa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAN,GAAI,OAAIC,EAAQD,EAAZ,GACvC,GAAE,CAACE,KAGF,SAACd,EAAD,UACGY,EAAKO,OAAS,EACbP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,UAAWjB,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWiB,EAA/B,EAA+BA,aAA/B,OACP,SAACnB,EAAD,CAEEC,KAAMA,EACNC,UAAWA,EACXC,MAAOgB,GAHFD,EAFA,KAST,8EAIP,C,+LCzBDE,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJiB,oCAOnB,IAAMC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,wBADT,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACIN,EAAAA,EAAAA,IAAA,iBAAoBM,IADxB,cACbH,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZV,EAAmB,mCAAG,WAAMY,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADG,cACpBH,EADoB,yBAGnBA,EAASC,KAAKf,MAHK,2CAAH,sDAMnBkB,EAAmB,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADG,cACpBH,EADoB,yBAEnBA,EAASC,KAAKI,SAFK,2CAAH,sDAKnBC,EAAqB,mCAAG,WAAMC,GAAN,uFACLV,EAAAA,EAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACND,MAAOA,KAHiB,cACtBP,EADsB,yBAMrBA,EAASC,KAAKI,SANO,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/ActorCard.styled.jsx","components/Cast/ActorCard.jsx","components/Cast/Cast.jsx","utils/FilmsAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastGallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n`;\n\nexport { CastGallery };\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  width: 250px;\n`;\n\nexport { Card };\n","import PropTypes from 'prop-types';\nimport { Card } from './ActorCard.styled';\nimport placeholder from 'images/ProfilePlaceholder.jpg';\n\nexport const ActorCard = ({ name, character, photo }) => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200/';\n\n  let imgSource = placeholder;\n\n  if (photo !== null) {\n    imgSource = `${BASE_IMG_URL}${photo}`;\n  }\n\n  return (\n    <Card>\n      <img src={imgSource} alt={`Actor ${name}`} />\n      <p>{name}</p>\n      <p>{character}</p>\n    </Card>\n  );\n};\n\nActorCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string,\n  photo: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastGallery } from './Cast.styled';\nimport { getMovieCreditsByID } from 'utils/FilmsAPI';\nimport { ActorCard } from 'components/Cast/ActorCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCreditsByID(movieId).then(cast => setCast(cast));\n  }, [movieId]);\n\n  return (\n    <CastGallery>\n      {cast.length > 0 ? (\n        cast.map(({ credit_id, name, character, profile_path }) => (\n          <ActorCard\n            key={credit_id}\n            name={name}\n            character={character}\n            photo={profile_path}\n          />\n        ))\n      ) : (\n        <div>We have no information about cast in this movie</div>\n      )}\n    </CastGallery>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'c3923fa38d2dd62131b577696cc2f23f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nconst getMovieByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n  getMovieByQuerySearch,\n};\n"],"names":["CastGallery","styled","Card","ActorCard","name","character","photo","imgSource","placeholder","src","alt","useState","cast","setCast","movieId","useParams","useEffect","getMovieCreditsByID","then","length","map","credit_id","profile_path","axios","api_key","getTrendingMovies","response","data","getMovieByID","id","getMovieReviewsByID","results","getMovieByQuerySearch","query","params"],"sourceRoot":""}
{"version":3,"file":"static/js/134.e62deddd.chunk.js","mappings":"sMAkDA,UA7Ce,WACb,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAgBF,EAAaG,IAAI,SACjCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACc,OAAlBJ,IAIJK,EAAAA,EAAAA,IAAsBL,GAAeM,MAAK,SAAAC,GAAC,OAAIX,EAAaW,EAAjB,GAC5C,GAAE,CAACP,IAYJ,OACE,4BACE,kBAAMQ,SAZY,SAAAD,GACpBA,EAAEE,iBAEF,IAAQC,EAAUH,EAAEI,cAAcC,SAASC,MAAnCH,MAERX,EAAgB,CAAEc,MAAOH,IAEzBH,EAAEI,cAAcG,OACjB,EAIG,WACE,kBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,KAAK,WACvD,mBAAQF,KAAK,SAAb,uBAEa,OAAdpB,IACC,wBACGA,EAAUuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACb,yBACE,UAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAOpB,EAArC,UACGkB,EAAgB,QAFZD,EADI,QAWxB,C,+LC5CDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJiB,oCAOnB,IAAMC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,wBADT,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMT,GAAN,uFACII,EAAAA,EAAAA,IAAA,iBAAoBJ,IADxB,cACbO,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZE,EAAmB,mCAAG,WAAMV,GAAN,uFACHI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADG,cACpBO,EADoB,yBAGnBA,EAASC,KAAKG,MAHK,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMZ,GAAN,uFACHI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADG,cACpBO,EADoB,yBAEnBA,EAASC,KAAKK,SAFK,2CAAH,sDAKnB3B,EAAqB,mCAAG,WAAM4B,GAAN,uFACLV,EAAAA,EAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACND,MAAOA,KAHiB,cACtBP,EADsB,yBAMrBA,EAASC,KAAKK,SANO,2CAAH,qD","sources":["pages/Movies.jsx","utils/FilmsAPI.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuerySearch } from 'utils/FilmsAPI';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieToSearch = searchParams.get('movie');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieToSearch === null) {\n      return;\n    }\n\n    getMovieByQuerySearch(movieToSearch).then(e => setMovieList(e));\n  }, [movieToSearch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const { value } = e.currentTarget.elements.movie;\n\n    setSearchParams({ movie: value });\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <input type=\"text\" placeholder=\"input movie name\" name=\"movie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieList !== null && (\n        <ul>\n          {movieList.map(({ id, original_title }) => (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={location}>\n                {original_title}{' '}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'c3923fa38d2dd62131b577696cc2f23f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nconst getMovieByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n  getMovieByQuerySearch,\n};\n"],"names":["useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","movieToSearch","get","location","useLocation","useEffect","getMovieByQuerySearch","then","e","onSubmit","preventDefault","value","currentTarget","elements","movie","reset","type","placeholder","name","map","id","original_title","to","state","axios","api_key","getTrendingMovies","response","data","getMovieByID","getMovieCreditsByID","cast","getMovieReviewsByID","results","query","params"],"sourceRoot":""}